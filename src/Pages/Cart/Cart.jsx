import React, { useContext, useState, useEffect } from "react";
import { PreduContext } from "../../PreduContext";
import { useNavigate } from "react-router-dom";
import "./Cart.css"; // –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π

const Cart = () => {
  const { cart, shop, updateCart, updateNumCartItems, applyCouponCode, removeAppliedCoupon, coupon, costTotal, costFinal, getOrderHistory, getUsedCoupons } = useContext(PreduContext);
  const navigate = useNavigate();

  const [cartItems, setCartItems] = useState([]);
  const [couponInput, setCouponInput] = useState("");

  useEffect(() => {
    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    const items = Object.keys(cart)
      .filter(itemId => cart[itemId] > 0)
      .map(itemId => {
        const product = shop.find(p => p.id === parseInt(itemId));
        if (product) {
          return {
            ...product,
            quantity: cart[itemId],
            total: product.cost_per_unit * cart[itemId]
          };
        }
        return null;
      })
      .filter(item => item !== null);
    setCartItems(items);
  }, [cart, shop]);

  const updateQuantity = (itemId, change) => {
    const newCart = { ...cart };
    newCart[itemId] = Math.max(1, newCart[itemId] + change);
    updateCart(newCart);
    updateNumCartItems(Object.values(newCart).reduce((sum, quantity) => sum + quantity, 0));
  };

  const removeItem = (itemId) => {
    if (window.confirm('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?')) {
      const newCart = { ...cart };
      delete newCart[itemId];
      updateCart(newCart);
      updateNumCartItems(Object.values(newCart).reduce((sum, quantity) => sum + quantity, 0));
    }
  };

  const applyCoupon = async () => {
    if (!couponInput.trim()) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫—É–ø–æ–Ω–∞');
      return;
    }
    // –õ–æ–≥–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫—É–ø–æ–Ω–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ PreduContext
    await applyCouponCode(couponInput);
    setCouponInput("");
  };

  const removeCoupon = async () => {
    // –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—É–ø–æ–Ω–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ PreduContext
    await removeAppliedCoupon();
  };

  const checkout = async () => {
    if (cartItems.length === 0) {
      alert('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
      return;
    }
    // –õ–æ–≥–∏–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ PreduContext –∏ —Ä–æ—É—Ç–µ—Ä–µ
    // console.log("–°–∏–º—É–ª—è—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã Visa –¥–ª—è –æ–ø–ª–∞—Ç—ã.");
    navigate('/Order'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ä–æ—É—Ç –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
  };

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥ React)
  useEffect(() => {
    const items = document.querySelectorAll('.cart-item');
    items.forEach((item, index) => {
        item.style.opacity = '0';
        item.style.transform = 'translateX(-20px)';
        setTimeout(() => {
            item.style.transition = 'all 0.5s ease';
            item.style.opacity = '1';
            item.style.transform = 'translateX(0)';
        }, index * 100);
    });
  }, [cartItems]); // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ cartItems


  return (
    <main className="cart">
      {/* Header assumed to be a separate component */}
      <div className="container">
        <div className="main-content">
          <div className="cart-section">
            <div className="cart-header">
              <div className="cart-title">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞</div>
            </div>
            <div className="cart-items" id="cart-items">
              {cartItems.length > 0 ? (
                <>
                  {cartItems.map(item => (
                    <div className="cart-item" key={item.id}>
                      <div className="item-image">
                        {item.category?.name === "entertainment" ? "üéµ" : item.category?.name === "education" ? "üìö" : "üíº"}
                      </div>
                      <div className="item-details">
                        <div className="item-brand">{item.brand?.name}</div>
                        <div className="item-name">{item.name}</div>
                        <div className="item-description">{item.description}</div>
                      </div>
                      <div className="item-price">{item.cost_per_unit?.toLocaleString()} ‚Ç∏</div>
                      <div className="quantity-controls">
                        <button className="quantity-btn" onClick={() => updateQuantity(item.id, -1)} disabled={item.quantity <= 1}>‚àí</button>
                        <span className="quantity">{item.quantity}</span>
                        <button className="quantity-btn" onClick={() => updateQuantity(item.id, 1)}>+</button>
                      </div>
                      <div className="item-total">{(item.cost_per_unit * item.quantity)?.toLocaleString()} ‚Ç∏</div>
                      <button className="remove-btn" onClick={() => removeItem(item.id)}>‚úï</button>
                    </div>
                  ))}
                </>
              ) : (
                <div className="empty-cart">
                    <div className="empty-cart-icon">üõí</div>
                    <div className="empty-cart-text">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>
                    <div className="empty-cart-subtext">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</div>
                    <button className="continue-shopping" onClick={() => navigate('/')}>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</button>
                </div>
              )}
            </div>
          </div>

          <div className="sidebar">
            <div className="sidebar-section">
              <div className="section-title">–ö—É–ø–æ–Ω</div>
              <div className="coupon-form">
                <div className="coupon-input-group">
                  <input
                    type="text"
                    className="coupon-input"
                    placeholder="–í–∞—à –∫—É–ø–æ–Ω"
                    value={couponInput}
                    onChange={(e) => setCouponInput(e.target.value)}
                  />
                  <button className="apply-btn" onClick={applyCoupon} disabled={!couponInput.trim()}>‚Üí</button>
                </div>
                <button className="delete-btn" onClick={removeCoupon} disabled={!coupon}>–£–¥–∞–ª–∏—Ç—å</button>
              </div>
              <div className="coupon-info">
                  <div className="coupon-info-row">
                      <span className="coupon-label">–ö—É–ø–æ–Ω:</span>
                      <span className="coupon-value" id="coupon-discount">{coupon ? `${coupon.applied_value?.toLocaleString()} ‚Ç∏` : '0 ‚Ç∏'}</span>
                  </div>
                  <div className="coupon-info-row">
                      <span className="coupon-label">–ú–∏–Ω. —Å—É–º–º–∞:</span>
                      <span className="coupon-value">{coupon ? `${coupon.min_order_required?.toLocaleString()} ‚Ç∏` : '0 ‚Ç∏'}</span>
                  </div>
                  <div className="coupon-info-row">
                      <span className="coupon-label">–ú–∞–∫—Å. —Å–∫–∏–¥–∫–∞:</span>
                      <span className="coupon-value">{coupon ? `${coupon.max_discount_applicable?.toLocaleString()} ‚Ç∏` : '0 ‚Ç∏'}</span>
                  </div>
                  <div className="coupon-info-row">
                      <span className="coupon-label">–°—Ç–∞—Ç—É—Å:</span>
                      <span className="coupon-value" id="coupon-status">{coupon ? `–ü—Ä–∏–º–µ–Ω–µ–Ω (${coupon.code})` : '–ö—É–ø–æ–Ω –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω'}</span>
                  </div>
              </div>
            </div>

            <div className="sidebar-section">
              <div className="section-title">–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ</div>
              <div className="summary-row">
                <span className="summary-label">–ö–æ—Ä–∑–∏–Ω–∞:</span>
                <span className="summary-value" id="cart-subtotal">{costTotal?.toLocaleString()} ‚Ç∏</span>
              </div>
              <div className="summary-row">
                <span className="summary-label">–ö—É–ø–æ–Ω:</span>
                <span className="summary-value" id="coupon-amount">{coupon ? `${coupon.applied_value?.toLocaleString()} ‚Ç∏` : '0 ‚Ç∏'}</span>
              </div>
              <div className="summary-total">
                <span className="total-label">–ò—Ç–æ–≥–æ:</span>
                <span className="total-value" id="final-total">{costFinal?.toLocaleString()} ‚Ç∏</span>
              </div>
              <button className="checkout-btn" onClick={checkout} disabled={cartItems.length === 0}>üõí –ø–µ—Ä–µ–π—Ç–∏ –æ–ø–ª–∞—Ç–∏—Ç—å</button>
            </div>
          </div>
        </div>
      </div>
    </main>
  );
};

export default Cart;